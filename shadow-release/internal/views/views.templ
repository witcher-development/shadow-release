package views

import (
"errors"
"shadow_release/internal/db"
)



func getVersionName(id int64, versions []db.Version) (string, error) {
	for _, item := range versions {
		if item.ID == id {
			return item.Name, nil
		}	
	}

	return "", errors.New("No Version found by id")
}
func filterByVersion(version int64, records []db.Record) []db.Record {
	var filtered []db.Record
	for _, item := range records {
		if item.Version == version {
			filtered = append(filtered, item)
		}
	}

	return filtered
}
func getMatchingRecord(currentId int64, key string, records []db.Record) (db.Record, error) {
	for _, item := range records {
		if item.Synckey == key && item.ID != currentId {
			return item, nil
		}	
	}

	return db.Record{}, errors.New("No Version found by id")
}


templ RecordsTable(records []db.Record, versions []db.Version) {
	<div>
		<div class="versions">
			for _, version := range versions {
				<div class="version">
					{version.Name}
				</div>
			}
		</div>
		for _, record := range filterByVersion(versions[0].ID, records) {
			<div class="record">
				<div class="version">
					{record.Path}
				</div>
				<div class="version">
					if shadow, err := getMatchingRecord(record.ID, record.Synckey, records); err == nil {
						<div>{shadow.Path}</div>
					} else {
						<div class="empty">
							no matching record found
						</div>
					}
				</div>
			</div>
		}
	</div>
}

templ Page(records []db.Record, versions []db.Version) {
	<html>
		<head>
			<link rel="stylesheet" href="assets/styles.css"></link>
		</head>

		<body>
			@RecordsTable(records, versions)
		</body>
	</html>
}
